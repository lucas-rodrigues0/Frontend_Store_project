{"version":3,"sources":["services/api.js","Components/ProdutosCarrinho/index.js","Components/BotaoComprar/index.js","Pages/Carrinho/index.js","Pages/Checkout/index.js","Components/BotaoAdiciona/index.js","Components/BotaoCarrinho/index.js","Components/NotaAvaliador/index.js","Components/FormularioAvaliaçao/index.js","Components/FreteGratis/index.js","Pages/DetalhesProduto/index.js","Components/ListaCategorias/index.js","Components/CardProduto/index.js","Components/ListaProdutos/index.js","Components/SeletorOrdenar/index.js","Pages/PaginaInicial/index.js","Components/Header/index.js","Components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["getCategories","a","fetch","categories","json","result","getProductsFromCategoryAndQuery","categoryId","query","ProdutosCarrinho","props","state","products","JSON","parse","localStorage","getItem","this","reduce","total","product","price","quantity","index","items","splice","setState","item","availableQuantity","setItem","stringify","map","title","thumbnail","key","src","alt","data-testid","type","onClick","increment","updateLocalStorage","decrement","remove","className","getTotal","Component","BotaoComprar","React","useState","shouldRedirect","setShouldRedirect","to","Carrinho","cartProducts","length","Checkout","inputChange","bind","fullname","email","cpf","phone","cep","address","target","name","value","placeholder","onChange","fullnameInput","emailInput","cpfInput","phoneInput","cepInput","addressInput","renderForm","BotaoAdiciona","addToLocalStorage","id","available_quantity","local","forEach","Object","values","includes","testId","addProductToCart","BotaoCarrinho","cartSize","toString","NotaAvaliador","verifyRate","rate","checked","onHandleRatingChange","rating","htmlFor","defaultProps","FormularioAvaliaçao","userEmail","comment","handleRatingChange","required","parseInt","maxLength","FreteGratis","shipping","free_shipping","DetalhesDoProduto","location","subtitle","condition","warranty","ListaCategorias","fetchListOfCategories","api","onChangeCategoryId","category","CardProduto","pathname","count","ListaProdutos","handleOrdenation","prevProps","onFetchProducts","orderFilter","prod","sort","b","SeletorOrdenar","handleOrder","PaginaInicial","queryStatus","changeQueryStatus","fetchProducts","changeCategoryId","renderStatusInput","renderInitialMessage","Header","Footer","href","App","setLocalStorage","then","data","results","prevState","path","render","component","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff3e0cce.chunk.js","sourcesContent":["export async function getCategories() {\n  const categories = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const result = await categories.json();\n  return result;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  let categories;\n  if (categoryId && query === '') {\n    categories = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`);\n  } else {\n    categories = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}_ID&q=${query}`);\n  }\n  const result = await categories.json();\n  return result;\n}\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nexport default class ProdutosCarrinho extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: JSON.parse(localStorage.getItem('PRODUTOS')),\n    };\n  }\n\n  getTotal() {\n    const { products } = this.state;\n    return products.reduce((total, product) => {\n      const { price, quantity } = product;\n      return total + price * quantity;\n    }, 0);\n  }\n\n  remove(index) {\n    const { products } = this.state;\n    const items = products;\n    items.splice(index, 1);\n    this.setState({\n      products: items,\n    });\n  }\n\n  increment(item, index) {\n    const { products } = this.state;\n    const items = products;\n    if (item.availableQuantity > item.quantity) item.quantity += 1;\n    items.splice(index, 1, item);\n    this.setState({\n      products: items,\n    });\n  }\n\n  decrement(item, index) {\n    const { products } = this.state;\n    const items = products;\n    if (item.quantity < 1) {\n      return item.quantity;\n    }\n    item.quantity -= 1;\n\n    items.splice(index, 1, item);\n    this.setState({\n      products: items,\n    });\n  }\n\n  updateLocalStorage(products) {\n    localStorage.setItem('PRODUTOS', JSON.stringify(products));\n  }\n\n  render() {\n    const { products } = this.state;\n    return (\n      <>\n        {products.map((product, index) => {\n          const { title, thumbnail, price, quantity } = product;\n\n          return (\n            <div key={ index }>\n              <img src={ `${thumbnail}` } alt=\"product\" />\n              <p data-testid=\"shopping-cart-product-name\">{title}</p>\n              <p>{price}</p>\n              <button\n                type=\"button\"\n                data-testid=\"product-increase-quantity\"\n                onClick={ () => {\n                  this.increment(product, index);\n                  this.updateLocalStorage(products);\n                } }\n              >\n                +\n              </button>\n              <button\n                type=\"button\"\n                data-testid=\"product-decrease-quantity\"\n                onClick={ () => {\n                  this.decrement(product, index);\n                  this.updateLocalStorage(products);\n                } }\n              >\n                -\n              </button>\n              <button\n                type=\"button\"\n                onClick={ () => {\n                  this.remove(product, index);\n                  this.updateLocalStorage(products);\n                } }\n              >\n                X\n              </button>\n              <div data-testid=\"shopping-cart-product-quantity\">{quantity}</div>\n            </div>\n          );\n        })}\n        <div className=\"valorTotal\">Total: R$ {this.getTotal()}</div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst BotaoComprar = () => {\n  const [shouldRedirect, setShouldRedirect] = React.useState(false);\n\n  if (shouldRedirect) return <Redirect to=\"/Frontend_Store_project/checkout\" />;\n  return (\n    <button\n      data-testid=\"checkout-products\"\n      type=\"button\"\n      onClick={ () => setShouldRedirect(true) }\n    >\n      COMPRAR\n\n    </button>\n  );\n};\n\nexport default BotaoComprar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProdutosCarrinho from '../../Components/ProdutosCarrinho';\nimport BotaoComprar from '../../Components/BotaoComprar';\n\nexport default class Carrinho extends Component {\n  render() {\n    const { cartProducts } = this.props;\n    const products = JSON.parse(localStorage.getItem('PRODUTOS'));\n    if (products.length === 0) {\n      return (\n        <div data-testid=\"shopping-cart-empty-message\">\n          Seu carrinho está vazio\n        </div>\n      );\n    }\n    return (\n      <>\n        <ProdutosCarrinho cartProducts={ cartProducts } />\n        <BotaoComprar />\n      </>\n    );\n  }\n}\n\nCarrinho.propTypes = {\n  cartProducts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { Component } from 'react';\nimport ProdutosCarrinho from '../../Components/ProdutosCarrinho';\n\nexport default class Checkout extends Component {\n  constructor() {\n    super();\n    this.inputChange = this.inputChange.bind(this);\n    this.state = {\n      fullname: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      cep: '',\n      address: '',\n    };\n  }\n\n  inputChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  fullnameInput() {\n    const { fullname } = this.state;\n    return (\n      <input\n        name=\"fullname\"\n        type=\"text\"\n        value={ fullname }\n        placeholder=\"Nome Completo\"\n        onChange={ this.inputChange }\n        data-testid=\"checkout-fullname\"\n        className=\"inputCheckout\"\n\n      />\n    );\n  }\n\n  emailInput() {\n    const { email } = this.state;\n    return (\n      <input\n        name=\"email\"\n        type=\"text\"\n        value={ email }\n        placeholder=\"Email\"\n        onChange={ this.inputChange }\n        data-testid=\"checkout-email\"\n        className=\"inputCheckout\"\n      />\n    );\n  }\n\n  cepInput() {\n    const { cep } = this.state;\n    return (\n      <input\n        name=\"cep\"\n        type=\"text\"\n        value={ cep }\n        placeholder=\"CEP\"\n        onChange={ this.inputChange }\n        data-testid=\"checkout-cep\"\n        className=\"inputCheckout\"\n      />\n    );\n  }\n\n  phoneInput() {\n    const { phone } = this.state;\n    return (\n      <input\n        name=\"phone\"\n        type=\"text\"\n        value={ phone }\n        placeholder=\"Telefone\"\n        onChange={ this.inputChange }\n        data-testid=\"checkout-phone\"\n        className=\"inputCheckout\"\n      />\n    );\n  }\n\n  cpfInput() {\n    const { cpf } = this.state;\n    return (\n      <input\n        name=\"cpf\"\n        type=\"text\"\n        value={ cpf }\n        placeholder=\"CPF\"\n        onChange={ this.inputChange }\n        data-testid=\"checkout-cpf\"\n        className=\"inputCheckout\"\n      />\n    );\n  }\n\n  addressInput() {\n    const { address } = this.state;\n    return (\n      <input\n        name=\"address\"\n        type=\"text\"\n        value={ address }\n        placeholder=\"Endereço\"\n        onChange={ this.inputChange }\n        data-testid=\"checkout-address\"\n        className=\"inputCheckout\"\n      />\n    );\n  }\n\n  renderForm() {\n    return (\n      <form>\n        <legend>Informações do Comprador:</legend>\n        {this.fullnameInput()}\n        {this.emailInput()}\n        {this.cpfInput()}\n        {this.phoneInput()}\n        {this.cepInput()}\n        {this.addressInput()}\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <ProdutosCarrinho />\n        {this.renderForm()}\n        <button type=\"button\">FINALIZAR</button>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class BotaoAdiciona extends Component {\n  constructor() {\n    super();\n    this.addToLocalStorage = this.addToLocalStorage.bind(this);\n  }\n\n  addToLocalStorage(product) {\n    const { title, price, thumbnail, id,\n      available_quantity: availableQuantity } = product;\n    const local = JSON.parse(localStorage.getItem('PRODUTOS'));\n    if (local.length !== 0) {\n      local.forEach((item) => {\n        if (Object.values(item).includes(id)) {\n          item.quantity += 1;\n          localStorage.setItem('PRODUTOS', JSON.stringify(local));\n        } else {\n          localStorage.setItem('PRODUTOS',\n            JSON.stringify([...local, { title,\n              price,\n              thumbnail,\n              id,\n              quantity: 1,\n              availableQuantity }]));\n        }\n      });\n    } else {\n      localStorage.setItem('PRODUTOS',\n        JSON.stringify([{ title,\n          price,\n          thumbnail,\n          id,\n          quantity: 1,\n          availableQuantity }]));\n    }\n  }\n\n  render() {\n    const { testId, product, addProductToCart } = this.props;\n    return (\n      <button\n        type=\"button\"\n        onClick={ () => {\n          this.addToLocalStorage(product);\n          addProductToCart(product);\n        } }\n        data-testid={ testId }\n      >\n        ADICIONAR\n      </button>\n    );\n  }\n}\n\nBotaoAdiciona.propTypes = {\n  testId: PropTypes.string.isRequired,\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    price: PropTypes.number,\n    thumbnail: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n  addProductToCart: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst BotaoCarrinho = (props) => {\n  const [shouldRedirect, setShouldRedirect] = React.useState(false);\n  const { cartSize } = props;\n  if (shouldRedirect) return <Redirect to=\"/Frontend_Store_project/cart\" />;\n  return (\n    <div className=\"carrinhoEContador\">\n      <button\n        data-testid=\"shopping-cart-button\"\n        type=\"button\"\n        onClick={ () => setShouldRedirect(true) }\n        className=\"botaoCarrinho\"\n      >\n        <img\n          src=\"https://image.flaticon.com/icons/png/512/1374/1374128.png\"\n          alt=\"Carrinho de Compras\"\n          className=\"carrinhoCompras\"\n        />\n      </button>\n      <span data-testid=\"shopping-cart-size\" className=\"valorCarrinho\">{ cartSize.toString() }</span>\n    </div>\n  );\n};\n\nBotaoCarrinho.propTypes = {\n  cartSize: PropTypes.number.isRequired,\n};\n\nexport default BotaoCarrinho;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class NotaAvaliador extends Component {\n  constructor(props) {\n    super(props);\n\n    this.verifyRate = this.verifyRate.bind(this);\n  }\n\n  verifyRate(rate, value) {\n    let checked = false;\n    if (rate >= value) {\n      checked = true;\n    }\n    return checked;\n  }\n\n  render() {\n    const a = 1;\n    const b = 2;\n    const c = 3;\n    const d = 4;\n    const e = 5;\n    const { onHandleRatingChange, rating } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"rating\">\n          Classificação:\n          <input\n            name=\"rating\"\n            type=\"checkbox\"\n            value=\"1\"\n            checked={ this.verifyRate(rating, a) }\n            onChange={ onHandleRatingChange }\n          />\n          <input\n            name=\"rating\"\n            type=\"checkbox\"\n            value=\"2\"\n            checked={ this.verifyRate(rating, b) }\n            onChange={ onHandleRatingChange }\n          />\n          <input\n            name=\"rating\"\n            type=\"checkbox\"\n            value=\"3\"\n            checked={ this.verifyRate(rating, c) }\n            onChange={ onHandleRatingChange }\n          />\n          <input\n            name=\"rating\"\n            type=\"checkbox\"\n            value=\"4\"\n            checked={ this.verifyRate(rating, d) }\n            onChange={ onHandleRatingChange }\n          />\n          <input\n            name=\"rating\"\n            type=\"checkbox\"\n            value=\"5\"\n            checked={ this.verifyRate(rating, e) }\n            onChange={ onHandleRatingChange }\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nNotaAvaliador.propTypes = {\n  onHandleRatingChange: PropTypes.func.isRequired,\n  rating: PropTypes.number,\n};\n\nNotaAvaliador.defaultProps = {\n  rating: 0,\n};\n","import React, { Component } from 'react';\n\nimport NotaAvaliador from '../NotaAvaliador';\n\nexport default class FormularioAvaliaçao extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userEmail: '',\n      rating: 0,\n      comment: '',\n    };\n\n    this.handleRatingChange = this.handleRatingChange.bind(this);\n  }\n\n  handleRatingChange({ target }) {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { userEmail, rating, comment } = this.state;\n    return (\n      <div>\n        <fieldset>\n          <legend>Avaliações:</legend>\n          <input\n            name=\"userEmail\"\n            type=\"text\"\n            value={ userEmail }\n            placeholder=\"Email\"\n            onChange={ this.handleRatingChange }\n            required\n          />\n          <NotaAvaliador\n            onHandleRatingChange={ this.handleRatingChange }\n            rating={ parseInt(rating, 10) }\n          />\n          <textarea\n            name=\"comment\"\n            value={ comment }\n            onChange={ this.handleRatingChange }\n            placeholder=\"Comentário (opcional)\"\n            maxLength=\"150\"\n            data-testid=\"product-detail-evaluation\"\n          />\n          <button type=\"button\">\n            AVALIAR\n          </button>\n        </fieldset>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FreteGratis extends Component {\n  render() {\n    const { product } = this.props;\n    const { shipping } = product;\n    const freeShipping = shipping.free_shipping;\n\n    if (freeShipping === true) {\n      return (\n        <p\n          data-testid=\"free-shipping\"\n          className=\"textoFreteGratis\"\n        >\n          Frete Grátis\n        </p>\n      );\n    }\n    return <div />;\n  }\n}\n\nFreteGratis.propTypes = {\n  product: PropTypes.shape({\n    shipping: PropTypes.shape({\n      free_shipping: PropTypes.bool,\n    }),\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BotaoAdiciona from '../../Components/BotaoAdiciona';\nimport BotaoCarrinho from '../../Components/BotaoCarrinho';\nimport FormularioAvaliaçao from '../../Components/FormularioAvaliaçao';\nimport FreteGratis from '../../Components/FreteGratis';\n\nexport default class DetalhesDoProduto extends Component {\n  render() {\n    const { location: { state: { product } } } = this.props;\n    const { title, subtitle, price,\n      condition, warranty, thumbnail } = product;\n    const { addProductToCart, cartSize } = this.props;\n\n    return (\n      <div className=\"productDetails\">\n        <img src={ `${thumbnail}` } alt=\"product\" className=\"imgProduct\" />\n        <p data-testid=\"product-detail-name\">{title}</p>\n        <FreteGratis product={ product } />\n        <p>{subtitle}</p>\n        <p>R$ {price}</p>\n        <p>Condição: {condition}</p>\n        <p>{ warranty }</p>\n        <BotaoAdiciona\n          product={ product }\n          addProductToCart={ addProductToCart }\n          testId=\"product-detail-add-to-cart\"\n        />\n        <BotaoCarrinho cartSize={ cartSize } />\n        <FormularioAvaliaçao />\n      </div>\n    );\n  }\n}\n\nDetalhesDoProduto.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      product: PropTypes.shape({\n        title: PropTypes.string,\n        subtitle: PropTypes.string,\n        price: PropTypes.number,\n        condition: PropTypes.string,\n        warranty: PropTypes.string,\n        thumbnail: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n  addProductToCart: PropTypes.func.isRequired,\n  cartSize: PropTypes.number.isRequired,\n\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../../services/api';\n\nexport default class ListaCategorias extends Component {\n  constructor() {\n    super();\n    this.fetchListOfCategories = this.fetchListOfCategories.bind(this);\n    this.state = {\n      categories: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchListOfCategories();\n  }\n\n  async fetchListOfCategories() {\n    const categories = await api.getCategories();\n    this.setState({\n      categories,\n    });\n  }\n\n  render() {\n    const { categories } = this.state;\n    const { onChangeCategoryId } = this.props;\n    return (\n      <div className=\"container-list-categories\">\n        {categories.map((category) => (\n          <label\n            data-testid=\"category\"\n            htmlFor=\"input-label-list-categories\"\n            className=\"label-list-categories\"\n            key={ category.id }\n            value={ category.name }\n          >\n            { category.name }\n            <input\n              id=\"input-label-list-categories\"\n              value={ category.id }\n              name=\"category\"\n              type=\"radio\"\n              onClick={ onChangeCategoryId }\n            />\n          </label>\n        ))}\n      </div>\n    );\n  }\n}\n\nListaCategorias.propTypes = {\n  onChangeCategoryId: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport BotaoAdiciona from '../BotaoAdiciona';\nimport FreteGratis from '../FreteGratis';\n\nexport default class CardProduto extends Component {\n  render() {\n    const { product, addProductToCart } = this.props;\n    const { title, thumbnail, price, id } = product;\n    return (\n      <div data-testid=\"product\" className=\"product\">\n        <h4>{title}</h4>\n        <FreteGratis product={ product } />\n        <img src={ thumbnail } alt=\"Imagem do Produto\" className=\"imgProduct\" />\n        <span>{`Preço: ${price}`}</span>\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ {\n            pathname: `/Frontend_Store_project/details/${id}`,\n            state: {\n              product,\n            },\n          } }\n          className=\"detalhesProduto\"\n        >\n          VER DETALHES\n        </Link>\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ {\n            pathname: `/Frontend_Store_project/cart/${id}`,\n            state: {\n              product, count: 1,\n            },\n          } }\n        />\n        <BotaoAdiciona\n          product={ product }\n          addProductToCart={ addProductToCart }\n          testId=\"product-add-to-cart\"\n        />\n      </div>\n    );\n  }\n}\n\nCardProduto.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n  }).isRequired,\n  addProductToCart: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CardProduto from '../CardProduto';\n\nexport default class ListaProdutos extends Component {\n  constructor() {\n    super();\n    this.handleOrdenation = this.handleOrdenation.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { categoryId, onFetchProducts } = this.props;\n    if (prevProps.categoryId !== categoryId) {\n      onFetchProducts();\n    }\n  }\n\n  handleOrdenation(orderFilter, prod) {\n    if (orderFilter === 'increasePrice') {\n      prod.sort((a, b) => {\n        const menos = -1;\n        if (a.price < b.price) {\n          return menos;\n        }\n        if (a.price > b.price) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    if (orderFilter === 'decreasePrice') {\n      prod.sort((a, b) => {\n        const menos = -1;\n        if (a.price > b.price) {\n          return menos;\n        }\n        if (a.price < b.price) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    return prod;\n  }\n\n  render() {\n    const { products, addProductToCart, orderFilter } = this.props;\n    const prod = products;\n\n    return (\n      <div className=\"listaDeProdutos\">\n        {\n          this.handleOrdenation(orderFilter, prod)\n            .map((product) => (\n              <CardProduto\n                key={ product.id }\n                product={ product }\n                addProductToCart={ addProductToCart }\n              />))\n        }\n      </div>\n    );\n  }\n}\n\nListaProdutos.propTypes = {\n  categoryId: PropTypes.string.isRequired,\n  onFetchProducts: PropTypes.func.isRequired,\n  addProductToCart: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  orderFilter: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SeletorOrdenar extends Component {\n  render() {\n    const { orderFilter, handleOrder } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"seletor\">\n          Ordenar por:\n          <select value={ orderFilter } onChange={ handleOrder }>\n            <option value=\"\">...</option>\n            <option value=\"increasePrice\">Menor Preço</option>\n            <option value=\"decreasePrice\">Maior Preço</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nSeletorOrdenar.propTypes = {\n  orderFilter: PropTypes.string.isRequired,\n  handleOrder: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ListaCategorias from '../../Components/ListaCategorias';\nimport BotaoCarrinho from '../../Components/BotaoCarrinho';\nimport ListaProdutos from '../../Components/ListaProdutos';\nimport SeletorOrdenar from '../../Components/SeletorOrdenar';\n\nexport default class PaginaInicial extends Component {\n  renderStatusInput() {\n    const { queryStatus, changeQueryStatus, fetchProducts } = this.props;\n    return (\n      <div className=\"buscar\">\n        <input\n          type=\"text\"\n          id=\"buscador\"\n          value={ queryStatus }\n          onChange={ changeQueryStatus }\n          data-testid=\"query-input\"\n          placeholder=\"O que você está procurando?\"\n          className=\"inputBuscar\"\n        />\n        <button\n          type=\"button\"\n          data-testid=\"query-button\"\n          onClick={ fetchProducts }\n          className=\"botaoBuscarProduto\"\n        >\n          <img\n            src=\"https://image.flaticon.com/icons/png/512/16/16492.png\"\n            alt=\"lupa buscar\"\n            className=\"lupa\"\n          />\n        </button>\n      </div>\n    );\n  }\n\n  renderInitialMessage() {\n    return (\n      <div data-testid=\"home-initial-message\" className=\"mensagemInicial\">\n        Digite algum termo de pesquisa ou escolha uma categoria.\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      products,\n      queryStatus,\n      categoryId,\n      fetchProducts,\n      changeCategoryId,\n      addProductToCart,\n      cartSize,\n      orderFilter,\n      handleOrder,\n    } = this.props;\n    return (\n      <div>\n        {this.renderStatusInput() }\n        <SeletorOrdenar orderFilter={ orderFilter } handleOrder={ handleOrder } />\n        <BotaoCarrinho cartSize={ cartSize } />\n        <div className=\"inputECarrinho\">\n          {this.renderStatusInput()}\n          <BotaoCarrinho cartSize={ cartSize } />\n        </div>\n        {(queryStatus === '' && categoryId === '') && this.renderInitialMessage()}\n        <ListaCategorias onChangeCategoryId={ changeCategoryId } />\n        <ListaProdutos\n          products={ products }\n          categoryId={ categoryId }\n          onFetchProducts={ fetchProducts }\n          addProductToCart={ addProductToCart }\n          orderFilter={ orderFilter }\n        />\n      </div>\n    );\n  }\n}\n\nPaginaInicial.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  queryStatus: PropTypes.string.isRequired,\n  categoryId: PropTypes.string.isRequired,\n  fetchProducts: PropTypes.func.isRequired,\n  changeQueryStatus: PropTypes.func.isRequired,\n  changeCategoryId: PropTypes.func.isRequired,\n  addProductToCart: PropTypes.func.isRequired,\n  cartSize: PropTypes.number.isRequired,\n  orderFilter: PropTypes.string.isRequired,\n  handleOrder: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <h1> Shopping </h1>\n        <img\n          src=\"https://go.betrybe.com/hubfs/logo%20cortada%20branca.png\"\n          alt=\"Logotipo Trybe\"\n          className=\"logoTrybe\"\n        />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <p>Projeto desenvolvido no modulo de FrontEnd da Trybe!</p>\n        <div className=\"linkedins\">\n          <p><a href=\"https://www.linkedin.com/in/arnaelciogomespereira/\" target=\"_blank\">Arnaelcio Gomes</a></p>\n          <p><a href=\"https://www.linkedin.com/in/bianca-caetano-31a2921aa/\" target=\"_blank\">Bianca Caetano</a></p>\n          <p><a href=\"https://www.linkedin.com/in/lucas-rodrigues-0107a5b3/\" target=\"_blank\">Lucas Rodrigues</a></p>\n          <p><a href=\"https://www.linkedin.com/in/marcela-souza-834696153/\" target=\"_blank\">Marcela Souza</a></p>\n        </div>\n\n      </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport * as api from './services/api';\nimport Carrinho from './Pages/Carrinho';\nimport Checkout from './Pages/Checkout';\nimport DetalhesProduto from './Pages/DetalhesProduto';\nimport PaginaInicial from './Pages/PaginaInicial';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      products: [],\n      queryStatus: '',\n      categoryId: '',\n      cartProducts: [],\n      orderFilter: '',\n    };\n\n    this.fetchProducts = this.fetchProducts.bind(this);\n    this.changeQueryStatus = this.changeQueryStatus.bind(this);\n    this.changeCategoryId = this.changeCategoryId.bind(this);\n    this.addProductToCart = this.addProductToCart.bind(this);\n    this.handleOrder = this.handleOrder.bind(this);\n  }\n\n  componentDidMount() {\n    this.setLocalStorage();\n  }\n\n  handleOrder({ target }) {\n    const { value } = target;\n    this.setState({\n      orderFilter: value,\n    });\n  }\n\n  setLocalStorage() {\n    if (!localStorage.getItem('PRODUTOS')) {\n      localStorage.setItem('PRODUTOS', JSON.stringify([]));\n    }\n    const products = JSON.parse(localStorage.getItem('PRODUTOS'));\n\n    this.setState({\n      cartProducts: products,\n    });\n  }\n\n  fetchProducts() {\n    const { queryStatus, categoryId } = this.state;\n    const { getProductsFromCategoryAndQuery } = api;\n\n    getProductsFromCategoryAndQuery(categoryId, queryStatus)\n      .then((data) => {\n        this.setState({\n          products: data.results,\n        });\n      });\n  }\n\n  changeCategoryId({ target }) {\n    const { value } = target;\n    this.setState({\n      categoryId: value,\n    });\n  }\n\n  changeQueryStatus({ target }) {\n    const { value } = target;\n    this.setState({\n      queryStatus: value,\n    });\n  }\n\n  addProductToCart(product) {\n    this.setState((prevState) => {\n      if (prevState.cartProducts.length !== 0) {\n        return { cartProducts: [...prevState.cartProducts, product] };\n      }\n      return { cartProducts: [product] };\n    });\n  }\n\n  render() {\n    const { products, queryStatus, categoryId, cartProducts, orderFilter } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <Router>\n          <Switch>\n            <Route\n              path=\"/Frontend_Store_project/details/:id\"\n              render={ (props) => (<DetalhesProduto\n                { ...props }\n                addProductToCart={ this.addProductToCart }\n                cartSize={ cartProducts.length }\n              />) }\n            />\n            <Route\n              path=\"/Frontend_Store_project/cart\"\n              render={ (props) => (<Carrinho\n                { ...props }\n                cartProducts={ cartProducts }\n              />) }\n            />\n            <Route path=\"/Frontend_Store_project/checkout\" component={ Checkout } />\n            <Route\n              exact\n              path=\"/Frontend_Store_project/\"\n              products={ products }\n              render={ (props) => (<PaginaInicial\n                { ...props }\n                products={ products }\n                queryStatus={ queryStatus }\n                changeQueryStatus={ this.changeQueryStatus }\n                fetchProducts={ this.fetchProducts }\n                categoryId={ categoryId }\n                changeCategoryId={ this.changeCategoryId }\n                addProductToCart={ this.addProductToCart }\n                cartSize={ cartProducts.length }\n                orderFilter={ orderFilter }\n                handleOrder={ this.handleOrder }\n              />) }\n            />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}